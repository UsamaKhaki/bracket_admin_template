(function($){

    $.fn.ajaxSelect2 = function(params) {
        var $selector = this;

        var consoleError = function (msg){
            console.error(msg);
            return false;
        }

        defaultOptions = {
            dropdownParent: $('body'),
            selector: $selector,
            minimumInputLength: 0,
            width: "100%",
            placeholder: 'Select',
            allowClear: true,
            url: null,
            data: function () {
                return {};
            },
            value: null,
            templateSelection: null,
            templateResult: null,
            onChange: null,
        };

        var opt = $.extend(defaultOptions, params);

        var identity = function (msg){
            if($selector.attr('id')){
                return '#'+$selector.attr('id')
            }else{
                return '.'+$selector.attr('class').replace(' ', '.')
            }
        }

        if(opt.value != null){
            if(typeof opt.value != 'object'){
                return consoleError('value param should be object array for '+identity())
            }
        }

        $placeholder = opt.placeholder;
        if($selector.attr('title')){
            $placeholder = 'Select ' + $selector.attr('title');
        }

        let $options = {
            dropdownParent: opt.dropdownParent,
            minimumInputLength: opt.minimumInputLength,
            width: opt.width,
            placeholder: $placeholder,
            allowClear: opt.allowClear,
            ajax: {
                url: function (params) {
                    return opt.url;
                },
                dataType: 'json',
                type: "GET",
                delay: 250,
                data: function (term) {
                    $termArr = {term: term}
                    if(opt.data()){
                        $.each(opt.data(), function (ii, ele) {
                            $termArr[ii] = ele;
                        })
                    }
                    return $termArr;
                },
                processResults: function (data) {
                    return {
                        results: $.map(data, function (item) {
                            $dataArr = {
                                text: item.text,
                                id: item.value,
                            };
                            if(opt.processResults){
                                $.each(opt.processResults, function (ii, ele) {
                                    $dataArr[ii] = item[ele];
                                })
                            }
                            return $dataArr;
                        })
                    };
                }
            },
        };

        if(opt.templateSelection != null){
            if(typeof opt.templateSelection != 'function'){
                return consoleError('templateSelection param should be function for '+identity())
            }else{
                $options['templateSelection'] = opt.templateSelection;
            }
        }

        if(opt.templateResult != null){
            if(typeof opt.templateResult != 'function'){
                return consoleError('templateResult param should be function for '+identity())
            }else{
                $options['templateResult'] = opt.templateResult;
            }
        }

        if(opt.value && opt.value.length){
            opt.value.forEach(item => {
                option = new Option(item.text, item.id, true, true);
                $selector.append(option);
            })
        }

        selector = $selector.select2($options);

        return this;

    }
})(jQuery);
